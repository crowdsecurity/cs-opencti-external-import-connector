name: Create ZIP for OpenCTI pull request
# example: gh workflow run zip-for-opencti-pr.yml -f tag_name=v1.1.4
on:
  workflow_dispatch:
    inputs:
      tag_name:
        type: string
        required: true
        description: Tag name

jobs:
  create-zip-for-opencti-pr:
    # This job creates a ZIP file of the sources to be used in an OpenCTI
    name: Create ZIP
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      EXTENSION_ZIP_NAME: "crowdsec-opencti-external-import-connector"

    steps:
      - name: Check naming convention
        run: |
          VERIF=$(echo ${{ github.event.inputs.tag_name }} | grep -E "^v([0-9]{1,}\.)([0-9]{1,}\.)([0-9]{1,})(-(alpha|beta)\.[0-9]{1,})?$")
          if [ ! ${VERIF} ]
          then
            echo "Tag name '${{ github.event.inputs.tag_name }}' does not comply with naming convention vX.Y.Z"
            exit 1
          fi

      - name: Set version number without v
        run: |
          echo "VERSION_NUMBER=$(echo ${{ github.event.inputs.tag_name }} | sed 's/v//g' )" >> $GITHUB_ENV

      - name: Set version sources
        run: |
          echo "VERSION_SOURCES=$(echo ${{ env.EXTENSION_ZIP_NAME }}-${{ env.VERSION_NUMBER }} )" >> $GITHUB_ENV    

      - name: Clone sources
        uses: actions/checkout@v4
        with:
          path: ${{ env.VERSION_SOURCES }}

      - name: Check version ${{ env.VERSION_NUMBER }} consistency in files
        # src/crowdsec/client_api.py
        run: |
          cd ${{ env.VERSION_SOURCES }}
          # Check "User-Agent": "crowdsec-opencti-import/vVERSION_NUMBER", in src/crowdsec/client_api.py
          UA_VERSION=$(grep -E "\"User-Agent\": \"crowdsec-opencti-import\/v(.*)\""  src/crowdsec/client_api.py | sed 's/ //g' | sed 's/"//g')
          if [[ $UA_VERSION == "User-Agent:crowdsec-opencti-import/v${{ env.VERSION_NUMBER }}," ]]
          then
              echo "USER AGENT VERSION OK"
          else
              echo "USER AGENT VERSION KO"
              echo $UA_VERSION 
              exit 1
          fi

      - name: Create zip for OpenCTI pull request
        run: |
          zip -r ${{ env.VERSION_SOURCES }}.zip ${{ env.VERSION_SOURCES }}/ -x '${{ env.VERSION_SOURCES }}/.git*' -x '${{ env.VERSION_SOURCES }}/docs/*' -x '${{ env.VERSION_SOURCES }}/dev/*' -x '${{ env.VERSION_SOURCES }}/CHANGELOG.md' 

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VERSION_SOURCES }}.zip
          path: ${{ env.VERSION_SOURCES }}.zip
          retention-days: 10
          include-hidden-files: true